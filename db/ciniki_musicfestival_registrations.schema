#
# Description
# -----------
# This table stores the registrations for a music festival
#
# Fields
# ------
# id:                   The ID assigned to the adjudicator.  # uuid:                 The Universal Unique ID.
# tnid:                 The tenant the adjudicator is attached to.
#
# festival_id:          The festival the adjudicator is attached to.
#
# teacher_customer_id:  The ID of the customer who is the teacher for this registration or conductor of ensemble.
#
# billing_customer_id:  The ID of the customer the billing is attached to, who did the registration.
#                       This will be the teacher if they registered their students, and the parent for children, 
#                       or adult if they registered themselves.
#
# accompanist_customer_id:  The ID of the customer who is the accompanist for this registration. 
#
# member_id:            The ID of the member festival they are registering from. Only used with provincials module flag.
#
# rtype:                The type of registration.
#
#                           30 - Individual
#                           50 - Duet
#                           60 - Trio
#                           90 - Ensemble
#
# status:               The current status of the registration.
#
#                            5 - Draft (online)
#                            6 - Cart (online)
#                            7 - E-Transfer Pending
#                           10 - Applied
#                           50 - Paid
#                           60 - Cancelled
#
# flags:                The options for the registration.
#
#                           0x01 - Share with teacher (valid only when customer type is not teacher)
#                           0x02 - Share with accompanist
#                           0x04 - 
#                           0x08 - 
#                           0x10 - 
#                           0x20 - 
#                           0x40 - 
#                           0x80 - 
#                           0x0100 - 
#                           0x0200 - 
#                           0x0400 - Blue
#                           0x0800 - Purple
#                           0x1000 - Red
#                           0x2000 - Orange
#                           0x4000 - Yellow
#                           0x8000 - Green
#
# invoice_id:           The ID of the invoice in ciniki.sapos if paid online.
#
# display_name:         Individuals, this field is ignored. 
#                       Duet & Trio the name for certificates, programs etc goes here. 
#                       Ensembles, the name of the group goes here.
#
# public_name:          The name to use for the PDF of the schedule, first initials and last names.
#
# pn_display_name:      The display name with pronouns.
# pn_public_name:       The public name with pronouns.
#
# competitor1_id:       The individual competitor, or first person of a duet/trio/ensemble.
# competitor2_id:       The second person of a duet/trio/ensemble.
# competitor3_id:       The third person of a trio/ensemble.
# competitor4_id:       The fourth person of a ensemble.
# competitor5_id:       The fifth person of a ensemble.
#
# class_id:             The class the registration is for.
#
# timeslot_id:          The ID of the time this registration is attached to. 
#                       Used to be for only split classes, now for all classes.
# timeslot_sequence:    The order to display this registration in for the timeslot.
#
# placement:            The placement for this registration in their timeslot/class. **future**
# 
# title1:               The title and composer of the 1st piece they will perform.
# composer1:            The composer of the 1st piece they will perform.
# movements1:           The movements or musical of the 1st piece they will perform.
# perf_time1:           The time of the 1st performance in seconds.
# title2:               The title and composer of the 2nd piece they will perform.
# perf_time2:           The time of the 2nd performance in seconds.
# title3:               The title and composer of the 3rd piece they will perform.
# perf_time3:           The time of the 3rd performance in seconds.
#
# fee:                  The entry fee for the registration.
#
# payment_type:         The type of payment.
#
#                           10 - Paypal
#                           20 - Square
#                           50 - Visa
#                           55 - Mastercard
#                           100 - Cash
#                           105 - Cheque
#                           110 - Email Transfer
#                           120 - Other
#                           121 - Paid Online
#
# participation:        Set to 1 when the registration is doing the class virtually, otherwise
#                       assumed to be in person.
#
#                           0 - Live/In Person
#                           1 - Virtual
#                           2 - Live/In Person Adjudication Plus
#                           3 - VirtualAdjudication Plus **future**
#
# virtual:              **deprecated**
#
# videolink:            The URL to view the video for the submission. Used for virtual music festivals.
# music_orgfilename:    The original filename of the PDF uploaded for sheet music.
#
# instrument:           The instrument they will use (depends on class).
#
# mark:                 The mark assigned to the registration.
# placement:            The placement of the registration (if used).
# level
#
# provincials_status:   The current status of the provincials recommendation.
#
#                           30 - Recommended
#                           50 - Accepted
#                           70 - Ineligible (declined by Provincials)
#                           90 - Declined (Competitor declined)
#
# provincials_position: The recommended position for provincials (1st,2nd,3rd,1st alt,2nd alt,3rd alt)
#
#                           1 - 1st Recommendation
#                           2 - 2nd Recommendation
#                           3 - 3rd Recommendation
#                           101 - 1st Alternate
#                           102 - 2nd Alternate
#                           103 - 3rd Alternate
#                       
#
# notes:                Any notes for the registration.
# internal_notes:       Any internal admin notes for the registration viewable only by admins.
#
# date_added:           The UTC date and time the record was added.
# last_updated:         The UTC date and time the record was last updated.
#
create table ciniki_musicfestival_registrations (
    id int not null auto_increment,
    uuid char(36) not null,
    tnid int not null,
    festival_id int not null,
    teacher_customer_id int not null,
    billing_customer_id int not null,
    accompanist_customer_id int not null,
    member_id int not null,
    rtype tinyint unsigned not null,
    status tinyint unsigned not null,
    flags smallint unsigned not null,
    invoice_id int not null,
    display_name varchar(250) not null,
    public_name varchar(250) not null,
    pn_display_name varchar(250) not null,
    pn_public_name varchar(250) not null,
    competitor1_id int not null,
    competitor2_id int not null,
    competitor3_id int not null,
    competitor4_id int not null,
    competitor5_id int not null,
    class_id int not null,
    timeslot_id int not null,
    timeslot_sequence tinyint unsigned not null,
    title1 varchar(250) not null,
    composer1 varchar(150) not null,
    movements1 varchar(150) not null,
    perf_time1 varchar(50) not null,
    title2 varchar(250) not null,
    composer2 varchar(150) not null,
    movements2 varchar(150) not null,
    perf_time2 varchar(50) not null,
    title3 varchar(250) not null,
    composer3 varchar(150) not null,
    movements3 varchar(150) not null,
    perf_time3 varchar(50) not null,
    title4 varchar(250) not null,
    composer4 varchar(150) not null,
    movements4 varchar(150) not null,
    perf_time4 varchar(50) not null,
    title5 varchar(250) not null,
    composer5 varchar(150) not null,
    movements5 varchar(150) not null,
    perf_time5 varchar(50) not null,
    title6 varchar(250) not null,
    composer6 varchar(150) not null,
    movements6 varchar(150) not null,
    perf_time6 varchar(50) not null,
    title7 varchar(250) not null,
    composer7 varchar(150) not null,
    movements7 varchar(150) not null,
    perf_time7 varchar(50) not null,
    title8 varchar(250) not null,
    composer8 varchar(150) not null,
    movements8 varchar(150) not null,
    perf_time8 varchar(50) not null,
    fee decimal(19,4) not null, 
    payment_type tinyint unsigned not null,
    participation tinyint unsigned not null,
    video_url1 varchar(500) not null,
    video_url2 varchar(500) not null,
    video_url3 varchar(500) not null,
    video_url4 varchar(150) not null,
    video_url5 varchar(150) not null,
    video_url6 varchar(150) not null,
    video_url7 varchar(150) not null,
    video_url8 varchar(150) not null,
    music_orgfilename1 varchar(250) not null,
    music_orgfilename2 varchar(250) not null,
    music_orgfilename3 varchar(250) not null,
    music_orgfilename4 varchar(250) not null,
    music_orgfilename5 varchar(250) not null,
    music_orgfilename6 varchar(250) not null,
    music_orgfilename7 varchar(250) not null,
    music_orgfilename8 varchar(250) not null,
    backtrack1 varchar(250) not null,
    backtrack2 varchar(250) not null,
    backtrack3 varchar(250) not null,
    backtrack4 varchar(250) not null,
    backtrack5 varchar(250) not null,
    backtrack6 varchar(250) not null,
    backtrack7 varchar(250) not null,
    backtrack8 varchar(250) not null,
    instrument varchar(250) not null,
    mark varchar(50) not null,
    placement varchar(50) not null,
    level varchar(50) not null,
    provincials_status tinying unsigned not null,
    provincials_position smallint unsigned not null,
    comments text not null,
    notes text not null,
    internal_notes text not null,
    date_added datetime not null,
    last_updated datetime not null,
    primary key (id),
    unique index (uuid),
    index (festival_id, teacher_customer_id, billing_customer_id, accompanist_customer_id, member_id),
    index (festival_id, class_id, tnid),
    index tenant_uuid (tnid, uuid, last_updated)
) ENGINE='InnoDB', COMMENT='v1.21';
